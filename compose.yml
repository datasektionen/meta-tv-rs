services:
  app:
    build:
      dockerfile: ./Dockerfile.dev
    ports:
      - 8000:8000
    environment:
      - ROCKET_DATABASES={sea_orm={url="postgresql://postgres:postgres@db/metatv"}}
      - ROCKET_OIDC={issuer_url="http://localhost:7003",client_id="client-id",client_secret="client-secret",redirect_url="http://localhost:8000/auth/oidc-callback"}
      - ROCKET_UPLOAD_DIR="./uploads"
      - ROCKET_SECRET_KEY=2hMUcPB1UjTd2W8aZDBxoUC27R0z9c56992m3x2MTE4D
      - ROCKET_ADDRESS=0.0.0.0
      - ROCKET_PORT=8000
      - ROCKET_LIMITS={file="50MiB", data-form="51MiB"}
      - FEED_ENTRY_DURATION=30000
    volumes:
      - upload:/srv/uploads
    configs:
    - source: nginx.conf
      target: /etc/nginx/nginx.conf
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: crates/
  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=metatv
    ports:
      - "5432:5432"
    healthcheck:
      test:
        - "CMD-SHELL"
        - "sh -c 'pg_isready -d metatv -U postgres'"
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 10s
  nyckeln:
    image: ghcr.io/datasektionen/nyckeln-under-dorrmattan
    configs:
      - source: nyckeln.yaml
        target: /config.yaml
    ports:
      - 7001:7001
      - 7002:7002
      - 7003:7003
      - 7004:7004

volumes:
  upload:

configs:
  nginx.conf:
    content: |
      events {}

      http {
        server {
          listen 7003;

          location / {
            proxy_pass http://nyckeln:7003;
          }
        }
      }

  nyckeln.yaml:
    content: |
      clients:
        - id: client-id
          secret: client-secret
          redirect_uris:
            - "http://localhost:8000/auth/oidc-callback"

      users:
        - ug_kth_id: some-id
          kth_id: turetek
          email: turetek@kth.se
          first_name: Ture
          family_name: Teknolog
          hive_tags:
            - id: personal_email
              content: turetek@gmail.com

      hive:
        tokens:
          - secret: aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaa
            permissions:
              - id: admin
                scope: null
        groups:
          - name: Systemansvarig
            id: d-sys
            domain: example.com
            members:
              - turetek
            tags:
              - id: author-pseudonym
                content: D-Sys
              - id: mandate
            permissions:
              - id: admin
                scope: null
