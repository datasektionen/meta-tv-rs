//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use super::sea_orm_active_enums::ContentType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "content")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub slide: i32,
    pub screen: i32,
    pub content_type: ContentType,
    pub file_path: String,
    pub archive_date: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::screen::Entity",
        from = "Column::Screen",
        to = "super::screen::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Screen,
    #[sea_orm(
        belongs_to = "super::slide::Entity",
        from = "Column::Slide",
        to = "super::slide::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Slide,
}

impl Related<super::screen::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Screen.def()
    }
}

impl Related<super::slide::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Slide.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
