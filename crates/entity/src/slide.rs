//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "slide")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub position: i32,
    pub group: i32,
    pub archive_date: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::content::Entity")]
    Content,
    #[sea_orm(
        belongs_to = "super::slide_group::Entity",
        from = "Column::Group",
        to = "super::slide_group::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    SlideGroup,
}

impl Related<super::content::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Content.def()
    }
}

impl Related<super::slide_group::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SlideGroup.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
